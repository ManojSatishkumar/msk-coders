{"version":3,"sources":["auth/login.js","components/nav-wrapper.js","utils/hooks.js","constants/languages.js","constants/url.js","hooks/snippets.js","constants/alert-message-types.js","components/alert-message.js","components/snippet-dialog.js","components/create-snippet.js","components/skeletons/snippet-card-skeleton.js","components/developer-card.js","components/menu-left-pane.js","redux/actions.js","components/dialog-message.js","components/snippet-card.js","components/no-view.js","components/snippets.js","dashboard/index.js","profile/index.js","auth/secure-route.js","auth/auth-route.js","constants/auth.js","auth/auth.js","hooks/users.js","components/developers-grid.js","app.js","redux/initial-state.js","redux/reducer.js","index.js"],"names":["Copyright","Typography","variant","color","align","Date","getFullYear","useStyles","makeStyles","theme","root","textAlign","submit","margin","spacing","height","width","breakpoints","down","SignInSide","classes","Container","container","component","className","CssBaseline","style","src","to","Button","Box","mt","flexGrow","title","marginLeft","navIcon","backgroundColor","palette","grey","marginRight","Component","props","user","useSelector","state","profile","content","AppBar","position","Toolbar","paddingLeft","paddingRight","alt","textDecoration","IconButton","target","href","html_url","Avatar","name","avatar_url","display","flexDirection","flex","SERVICE_STATES","useAsync","fetcher","useState","data","error","status","resp","setResp","inProgress","exec","args","a","reset","LANGUAGES","Text","mode","extension","primary","secondary","JSON","jsonld","JavaScript","CSS","HTML","C","Python","R","Go","Java","BASE_URL","window","location","includes","useGetSnippets","axios","get","params","accessToken","Cookies","headers","Accept","getSnippetsTrigger","isGetSnippetsInProgress","getSnippetsStatus","getSnippetsData","getSnippetsError","Alert","elevation","zIndex","marginTop","AlertMessage","duration","message","type","ALERT_MESSAGE_TYPES","verticalPosition","horizontalPosition","handleCloseAlert","open","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","dialogRoot","dialogTitle","paddingTop","paddingBottom","formRoot","codeMirror","border","SnippetDialog","snippetId","cursor","setCursor","language","setLanguage","setTitle","description","setDescription","setContent","handleCreateSnippet","handleUpdateSnippet","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","DialogContentText","id","FormControl","InputLabel","Select","disabled","value","onChange","e","Object","keys","map","MenuItem","TextField","required","label","defaultValue","autofocus","editor","metadata","doc","getCursor","options","lineNumbers","DialogActions","onClick","padding","marginBottom","languageChip","minWidth","CreateSnippet","defaultLanguage","alertCallback","refreshSnippetsCallback","React","ch","line","secret","fileName","post","files","public","createSnippetTrigger","isCreateSnippetInProgress","createSnippetStatus","createSnippetData","createSnippetError","useCreateSnippet","useEffect","Paper","languageKey","Chip","handleClickOpen","SnippetCard","media","SnippetCardSkeleton","Card","card","CardHeader","avatar","Skeleton","animation","action","subheader","CardContent","Fragment","paperRoot","InfoItem","DeveloperCard","bio","followers","following","company","MenuLeftPane","List","ListItem","button","ListItemIcon","ListItemText","DialogMessage","dialogOpen","setDialogOpen","rightButtontext","rightButtonColor","leftButtonText","onRightButtonClick","onLeftButtonClick","titleText","bodyText","autoFocus","HtmlTooltip","withStyles","tooltip","fontSize","typography","pxToRem","Tooltip","userSelect","snippetCard","snippetContent","snippetFileContent","wordWrap","overflow","textOverflow","rawUrl","dispatch","useDispatch","fileContent","setFileContent","alertObj","setAlertObj","updateDialogOpen","setUpdateDialogOpen","dialogLanguage","setDialogLanguage","setDialogTitle","dialogDescription","setDialogDescription","dialogContent","setDialogContent","dialogCursor","setDialogCursor","deleteDialogOpen","setDeleteDialogOpen","delete","deleteSnippetTrigger","isDeleteSnippetInProgress","deleteSnippetStatus","deleteSnippetError","useDeleteSnippet","patch","updateSnippetTrigger","isUpdateSnippetInProgress","updateSnippetStatus","updateSnippetData","updateSnippetError","useUpdateSnippet","stringify","undefined","loadSnippetTrigger","isLoadSnippetInProgress","loadSnippetStatus","loadSnippetData","loadSnippetError","useLoadSnippet","ACTIONS","updateSnippet","deleteSnippet","size","placement","aria-label","DeleteActionIcon","noWrap","Divider","CardActions","text","onCopy","snippetActionIcon","deleteActionIcon","handleDeleteSnippet","wrapper","borderRadius","NoView","primaryText","secondaryText","Snippets","snippets","length","snippetsArea","snippet","index","leftPaneGrid","withNavBar","showAlert","setShowAlert","alertInfo","setAlertInfo","Grid","item","xs","sm","SecureRoute","render","Cookie","AuthRoute","client_id","Auth","userAccessToken","setUserAccessToken","queryString","search","code","URLSearchParams","then","response","token","console","log","catch","successCallback","developersArea","developerCard","developerAvatar","developersUrl","page","getDevelopersTrigger","isGetDevelopersInProgress","getDevelopersStatus","getDevelopersData","getDevelopersError","useGetDevelopers","setPage","loadingComplete","setLoadingComplete","developers","followingUrl","url","actionType","developer","login","isVisible","loadMoreDevelopers","App","exact","path","Login","Dashboard","initialState","parse","reducer","INITIAL_STATE","set","allSnippets","filteredSnippets","filter","fileKey","startsWith","processedSnippets","filename","slice","raw_url","newState","newSnippets","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReduxApp","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.4f0b1644.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"@material-ui/core\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {\"MSK Coders \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: \"center\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    height: 60,\n    width: 400,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n}));\n\nexport default function SignInSide() {\n  const classes = useStyles();\n\n  return (\n    <Container container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <img style={{ width: 200 }} src=\"/images/favicon.png\" />\n      <Typography component=\"h1\" variant=\"h5\">\n        MSK Coders\n      </Typography>\n      <Link to=\"/auth\">\n        <Button variant=\"contained\" color=\"primary\" className={classes.submit}>\n          <Typography>Sign In with Github</Typography>\n        </Button>\n      </Link>\n\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  IconButton,\n} from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      flexGrow: 1,\n    },\n    title: {\n      flexGrow: 1,\n      marginLeft: 10,\n    },\n    navIcon: {\n      backgroundColor: theme.palette.grey[300],\n      marginRight: 10,\n      height: 40,\n      width: 40,\n    },\n  };\n});\n\nexport default (Component) => (props) => {\n  const classes = useStyles();\n  const { user } = useSelector((state) => {\n    return {\n      user: state.profile.user,\n    };\n  });\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <div className={classes.content}>\n        <AppBar color=\"default\" position=\"fixed\">\n          <Toolbar\n            style={{ paddingLeft: 10, paddingRight: 10 }}\n            position=\"static\"\n            variant=\"dense\"\n          >\n            <img\n              alt=\"MSK Snippets Icon\"\n              style={{ height: 40, width: 40 }}\n              src=\"/images/favicon.png\"\n            ></img>\n\n            <Typography variant=\"h5\" className={classes.title}>\n              Coders\n            </Typography>\n            <Link\n              to=\"/dashboard\"\n              style={{\n                textDecoration: \"none\",\n                color: \"black\",\n              }}\n            >\n              <IconButton className={classes.navIcon}>\n                <DashboardIcon />\n              </IconButton>\n            </Link>\n            {/* <IconButton className={classes.navIcon}>\n              <GroupIcon />\n            </IconButton> */}\n            <a target=\"_blank\" href={user.html_url}>\n              <Avatar alt={user.name} src={user.avatar_url} />\n            </a>\n          </Toolbar>\n        </AppBar>\n        <div style={{ display: \"flex\", flexDirection: \"column\", flex: 1 }}>\n          <Component {...props} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState } from \"react\";\n\nexport const SERVICE_STATES = {\n  IDLE: \"IDLE\",\n  SUCCESS: \"SUCCESS\",\n  FAILED: \"FAILED\",\n  IN_PROGRESS: \"IN_PROGRESS\",\n};\n\nexport const useAsync = (fetcher) => {\n  const [resp, setResp] = useState({\n    data: null,\n    error: null,\n    status: SERVICE_STATES.IDLE,\n  });\n\n  return {\n    ...resp,\n    inProgress: resp.status === SERVICE_STATES.IN_PROGRESS,\n    exec: (...args) => {\n      (async () => {\n        setResp({\n          data: null,\n          error: null,\n          status: SERVICE_STATES.IN_PROGRESS,\n        });\n        try {\n          const data = await fetcher(...args);\n          setResp({\n            data: data.data,\n            error: null,\n            status: SERVICE_STATES.SUCCESS,\n          });\n        } catch (err) {\n          setResp({\n            data: null,\n            error: err,\n            status: SERVICE_STATES.FAILED,\n          });\n        }\n      })();\n    },\n    reset: () => {\n      setResp({\n        data: null,\n        error: null,\n        status: SERVICE_STATES.IDLE,\n      });\n    },\n  };\n};\n","export const LANGUAGES = {\n  Text: {\n    mode: \"\",\n    extension: \".txt\",\n    color: {\n      primary: \"rgb(57%, 57%, 57%)\",\n      secondary: \"rgb(95.6%, 95.6%, 95.6%)\",\n    },\n  },\n  JSON: {\n    mode: { name: \"javascript\", jsonld: true },\n    extension: \".json\",\n    color: {\n      primary: \"black\",\n      secondary: \"rgb(95.6%, 95.6%, 95.6%)\",\n    },\n  },\n  JavaScript: {\n    mode: \"javascript\",\n    extension: \".js\",\n    color: {\n      primary: \"rgb(76.5%, 69.5%, 0%)\",\n      secondary: \"rgb(100%, 98.3%, 84.7%)\",\n    },\n  },\n  CSS: {\n    mode: \"css\",\n    extension: \".css\",\n    color: {\n      primary: \"blue\",\n      secondary: \"rgb(88.1%, 91.4%, 99.9%)\",\n    },\n  },\n  HTML: {\n    mode: \"htmlembedded\",\n    extension: \".html\",\n    color: {\n      primary: \"rgb(91.3%, 31.7%, 0%)\",\n      secondary: \"rgb(98.4%, 85.8%, 79.1%)\",\n    },\n  },\n\n  C: {\n    mode: \"cmake\",\n    extension: \".c\",\n    color: {\n      primary: \"rgb(17.9%, 0%, 83.5%)\",\n      secondary: \"rgb(89.1%, 86.2%, 99.9%)\",\n    },\n  },\n  Python: {\n    mode: \"python\",\n    extension: \".py\",\n    color: {\n      primary: \"rgb(0.6%, 47.1%, 87.4%)\",\n      secondary: \"rgb(84.6%, 91.1%, 96.8%)\",\n    },\n  },\n  R: {\n    mode: \"r\",\n    extension: \".r\",\n    color: {\n      primary: \"rgb(0.9%, 34.7%, 81.6%)\",\n      secondary: \"rgb(84.6%, 91.1%, 96.8%)\",\n    },\n  },\n  Go: {\n    mode: \"go\",\n    extension: \".go\",\n    color: {\n      primary: \"rgb(0.9%, 65%, 81.6%)\",\n      secondary: \"rgb(84.7%, 96.2%, 99.1%)\",\n    },\n  },\n\n  //  Need to find\n  Java: {\n    mode: \"javascript\",\n    extension: \".java\",\n    color: {\n      primary: \"rgb(86.2%, 8.2%, 0.6%)\",\n      secondary: \"rgb(99.1%, 87.1%, 85.9%)\",\n    },\n  },\n  \"C++\": {\n    mode: \"cmake\",\n    extension: \".cpp\",\n    color: {\n      primary: \"rgb(17.9%, 0%, 83.5%)\",\n      secondary: \"rgb(89.1%, 86.2%, 99.9%)\",\n    },\n  },\n  \"C#\": {\n    mode: \"cmake\",\n    extension: \".cs\",\n    color: {\n      primary: \"purple\",\n      secondary: \"rgb(93.7%, 85.9%, 99.1%)\",\n    },\n  },\n};\n","\nexport const APP_URL = window.location.href.includes(\"localhost\")\n  ? \"http://localhost:7001\"\n  : \"https://mskcoders.com\";\n\nexport const BASE_URL = window.location.href.includes(\"localhost\")\n  ? \"http://localhost:9999\"\n  : \"https://msk-coders-backend.herokuapp.com\";\n","import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { LANGUAGES } from \"@constants/languages\";\n\nimport { useAsync } from \"@utils/hooks\";\nimport { BASE_URL } from \"@constants/url\";\n\nexport const useGetSnippets = () => {\n  const { exec, inProgress, error, status, data } = useAsync(async () =>\n    axios.get(BASE_URL + \"/snippets\", {\n      params: {\n        accessToken: Cookies.get(\"access_token\"),\n      },\n      headers: {\n        Accept: \"application/json\",\n      },\n    })\n  );\n\n  return {\n    getSnippetsTrigger: exec,\n    isGetSnippetsInProgress: inProgress,\n    getSnippetsStatus: status,\n    getSnippetsData: data,\n    getSnippetsError: error,\n  };\n};\n\nexport const useLoadSnippet = () => {\n  let { exec, inProgress, error, status, data } = useAsync(async ({ rawUrl }) =>\n    axios.get(BASE_URL + \"/loadSnippet\", {\n      params: {\n        accessToken: Cookies.get(\"access_token\"),\n        rawUrl,\n      },\n      headers: {\n        Accept: \"application/json\",\n      },\n    })\n  );\n\n  if (typeof data === \"object\") {\n    data = JSON.stringify(data, undefined, 2);\n  }\n\n  return {\n    loadSnippetTrigger: exec,\n    isLoadSnippetInProgress: inProgress,\n    loadSnippetStatus: status,\n    loadSnippetData: data,\n    loadSnippetError: error,\n  };\n};\n\nexport const useCreateSnippet = () => {\n  const { exec, inProgress, error, status, data } = useAsync(\n    async ({ language, title, description, content, secret = false }) => {\n      const fileName = `msk-snippet-${title}${LANGUAGES[language].extension}`;\n      return axios.post(\n        BASE_URL + \"/createSnippet\",\n        {\n          description,\n          files: {\n            [fileName]: {\n              content,\n            },\n          },\n          public: !secret,\n        },\n        {\n          params: {\n            accessToken: Cookies.get(\"access_token\"),\n          },\n          headers: {\n            Accept: \"application/json\",\n          },\n        }\n      );\n    }\n  );\n\n  return {\n    createSnippetTrigger: exec,\n    isCreateSnippetInProgress: inProgress,\n    createSnippetStatus: status,\n    createSnippetData: data,\n    createSnippetError: error,\n  };\n};\n\nexport const useUpdateSnippet = () => {\n  const { exec, inProgress, error, status, data } = useAsync(\n    async ({\n      snippetId,\n      language,\n      title,\n      description,\n      content,\n      secret = false,\n    }) => {\n      const fileName = `msk-snippet-${title}${LANGUAGES[language].extension}`;\n      return axios.patch(\n        `${BASE_URL}/updateSnippet/${snippetId}`,\n        {\n          description,\n          files: {\n            [fileName]: {\n              content,\n            },\n          },\n          public: !secret,\n        },\n        {\n          params: {\n            accessToken: Cookies.get(\"access_token\"),\n          },\n          headers: {\n            Accept: \"application/json\",\n          },\n        }\n      );\n    }\n  );\n\n  return {\n    updateSnippetTrigger: exec,\n    isUpdateSnippetInProgress: inProgress,\n    updateSnippetStatus: status,\n    updateSnippetData: data,\n    updateSnippetError: error,\n  };\n};\n\nexport const useDeleteSnippet = () => {\n  const { exec, inProgress, error, status } = useAsync(async ({ snippetId }) =>\n    axios.delete(`${BASE_URL}/deleteSnippet/${snippetId}`, {\n      params: {\n        accessToken: Cookies.get(\"access_token\"),\n      },\n      headers: {\n        Accept: \"application/json\",\n      },\n    })\n  );\n\n  return {\n    deleteSnippetTrigger: exec,\n    isDeleteSnippetInProgress: inProgress,\n    deleteSnippetStatus: status,\n    deleteSnippetError: error,\n  };\n};\n","export default {\n  DEFAULT: 'default',\n  ERROR: 'error',\n  WARNING: 'warning',\n  INFO: 'info',\n  SUCCESS: 'success',\n};\n","import React, { useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport ALERT_MESSAGE_TYPES from \"@constants/alert-message-types\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    zIndex: 1000000,\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AlertMessage({\n  duration = 3000,\n  message = \"No message to show\",\n  type = ALERT_MESSAGE_TYPES.INFO,\n  verticalPosition = \"bottom\",\n  horizontalPosition = \"center\",\n  handleCloseAlert,\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n    handleCloseAlert();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        open={open}\n        autoHideDuration={duration}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: verticalPosition,\n          horizontal: horizontalPosition,\n        }}\n      >\n        <Alert onClose={handleClose} severity={type}>\n          <Typography>{message}</Typography>\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { LANGUAGES } from \"@constants/languages\";\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\n\nimport ALERT_MESSAGE_TYPES from \"@constants/alert-message-types\";\nimport { SERVICE_STATES } from \"@utils/hooks\";\nimport { useCreateSnippet } from \"@hooks/snippets\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { TextField, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {},\n    dialogRoot: {},\n    dialogTitle: {\n      color: \"white\",\n      paddingTop: 5,\n      paddingBottom: 5,\n    },\n    formRoot: {},\n    codeMirror: {\n      height: 448,\n      border: \"1px solid gray\",\n      marginTop: 10,\n    },\n  };\n});\n\nexport default function SnippetDialog({\n  snippetId = null,\n  open,\n  setOpen,\n  cursor,\n  setCursor,\n  language,\n  setLanguage,\n  title,\n  setTitle,\n  description,\n  setDescription,\n  content,\n  setContent,\n  handleCreateSnippet,\n  handleUpdateSnippet,\n}) {\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setOpen(false);\n    setTitle(\"My snippet\");\n    setDescription(\"\");\n    setContent(\"\");\n  };\n\n  function handleLanguageChange(e) {\n    setLanguage(e.target.value);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Dialog\n        fullWidth\n        maxWidth=\"lg\"\n        className={classes.dialogRoot}\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle\n          className={classes.dialogTitle}\n          style={{\n            backgroundColor: LANGUAGES[language].color.primary,\n          }}\n        >\n          {snippetId ? \"Update \" : \"Create \"}\n          {language} snippet\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <br />\n            <Box>\n              <FormControl style={{ marginRight: 30 }}>\n                <InputLabel>Language</InputLabel>\n                <Select\n                  disabled={snippetId}\n                  value={language}\n                  onChange={handleLanguageChange}\n                >\n                  {Object.keys(LANGUAGES).map((language) => {\n                    return (\n                      <MenuItem key={language} value={language}>\n                        {language}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n              <FormControl\n                style={{\n                  width: \"50%\",\n                }}\n              >\n                <TextField\n                  disabled={snippetId}\n                  required\n                  label=\"Title\"\n                  defaultValue={title}\n                  onChange={(e) => {\n                    setTitle(e.target.value);\n                  }}\n                />\n              </FormControl>\n            </Box>\n            <br />\n            <Box>\n              <FormControl\n                style={{\n                  width: \"100%\",\n                }}\n              >\n                <TextField\n                  label=\"Description\"\n                  defaultValue={description}\n                  onChange={(e) => {\n                    setDescription(e.target.value);\n                  }}\n                />\n              </FormControl>\n            </Box>\n            <br />\n            <InputLabel>\n              Type / paste / drag & drop the snippet file below\n            </InputLabel>\n            <Box className={classes.codeMirror}>\n              <CodeMirror\n                cursor={cursor}\n                defaultValue={content}\n                value={content}\n                autofocus={true}\n                onChange={(editor, metadata, value) => {\n                  setCursor(editor.doc.getCursor());\n                  setContent(value);\n                }}\n                options={{\n                  mode: LANGUAGES[language].mode,\n                  lineNumbers: true,\n                }}\n              />\n            </Box>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"outlined\" onClick={handleClose}>\n            <Typography>Cancel</Typography>\n          </Button>\n          <div style={{ flex: 1 }}></div>\n\n          {snippetId ? (\n            <Button\n              variant=\"contained\"\n              style={{\n                backgroundColor: LANGUAGES[language].color.primary,\n                color: \"white\",\n              }}\n              onClick={() => {\n                handleUpdateSnippet({\n                  snippetId,\n                  language,\n                  title,\n                  description,\n                  content,\n                });\n              }}\n            >\n              <Typography>Update</Typography>\n            </Button>\n          ) : (\n            <Button\n              variant=\"contained\"\n              style={{\n                backgroundColor: LANGUAGES[language].color.primary,\n                color: \"white\",\n              }}\n              onClick={handleCreateSnippet}\n            >\n              <Typography>Create</Typography>\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { LANGUAGES } from \"@constants/languages\";\n\nimport ALERT_MESSAGE_TYPES from \"@constants/alert-message-types\";\nimport { SERVICE_STATES } from \"@utils/hooks\";\nimport { useCreateSnippet } from \"@hooks/snippets\";\n\nimport Box from \"@material-ui/core/Box\";\nimport { Paper, Typography } from \"@material-ui/core\";\nimport Chip from \"@material-ui/core/Chip\";\nimport SnippetDialog from \"./snippet-dialog\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      padding: 10,\n      marginTop: 50,\n      marginBottom: 30,\n    },\n    languageChip: {\n      textAlign: \"left\",\n      minWidth: 100,\n      margin: 5,\n      color: \"white\",\n    },\n  };\n});\n\nexport default function CreateSnippet({\n  defaultLanguage = \"JavaScript\",\n  alertCallback,\n  refreshSnippetsCallback,\n}) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [language, setLanguage] = React.useState(defaultLanguage);\n  const [title, setTitle] = React.useState(\"My snippet\");\n  const [description, setDescription] = React.useState(\"\");\n  const [content, setContent] = React.useState(\"\");\n  const [cursor, setCursor] = React.useState({\n    ch: 0,\n    line: 0,\n  });\n  const { createSnippetTrigger, createSnippetStatus } = useCreateSnippet();\n\n  useEffect(() => {\n    if (createSnippetStatus === SERVICE_STATES.SUCCESS) {\n      alertCallback({\n        message: \"Snippet created\",\n        type: ALERT_MESSAGE_TYPES.SUCCESS,\n      });\n\n      refreshSnippetsCallback();\n    }\n  }, [createSnippetStatus]);\n\n  const handleClickOpen = ({ languageKey }) => {\n    setLanguage(languageKey);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setTitle(\"My snippet\");\n    setDescription(\"\");\n    setContent(\"\");\n  };\n\n  function handleCreateSnippet() {\n    createSnippetTrigger({\n      language,\n      title,\n      description,\n      content,\n    });\n    handleClose();\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant=\"h5\">Create a snippet</Typography>\n      <br />\n      <Box className={classes.language}>\n        {Object.keys(LANGUAGES).map((languageKey) => {\n          return (\n            <Chip\n              key={languageKey}\n              onClick={() =>\n                handleClickOpen({\n                  languageKey,\n                })\n              }\n              className={classes.languageChip}\n              style={{\n                backgroundColor: LANGUAGES[languageKey].color.primary,\n              }}\n              label={<Typography>{languageKey}</Typography>}\n            />\n          );\n        })}\n      </Box>\n      <br />\n      <SnippetDialog\n        open={open}\n        setOpen={setOpen}\n        cursor={cursor}\n        setCursor={setCursor}\n        language={language}\n        setLanguage={setLanguage}\n        title={title}\n        setTitle={setTitle}\n        description={description}\n        setDescription={setDescription}\n        content={content}\n        setContent={setContent}\n        handleCreateSnippet={handleCreateSnippet}\n      />\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      display: \"inline-block\",\n      width: 250,\n      margin: 15,\n      textAlign: \"left\",\n    },\n    SnippetCard: {\n      border: \"1px solid lightgray\",\n      height: 360,\n      width: 250,\n      display: \"inline-block\",\n    },\n    media: {\n      height: 240,\n    },\n  };\n});\n\nexport default function SnippetCardSkeleton() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Box className={classes.SnippetCard}>\n        <Card className={classes.card}>\n          <CardHeader\n            avatar={\n              <Skeleton\n                animation=\"wave\"\n                variant=\"circle\"\n                width={40}\n                height={40}\n              />\n            }\n            action={null}\n            title={\n              <Skeleton\n                animation=\"wave\"\n                height={10}\n                width=\"80%\"\n                style={{ marginBottom: 6 }}\n              />\n            }\n            subheader={<Skeleton animation=\"wave\" height={10} width=\"40%\" />}\n          />\n          <Skeleton animation=\"wave\" variant=\"rect\" className={classes.media} />\n\n          <CardContent>\n            <React.Fragment>\n              <Skeleton\n                animation=\"wave\"\n                height={10}\n                style={{ marginBottom: 6 }}\n              />\n              <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n            </React.Fragment>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 50,\n    textAlign: \"center\",\n  },\n  paperRoot: {\n    padding: 20,\n    width: \"100%\",\n  },\n  avatar: {\n    width: \"50%\",\n  },\n  InfoItem: {\n    \"&:hover\": {\n      backgroundColor: theme.palette.grey[200],\n    },\n  },\n}));\n\nexport default function DeveloperCard() {\n  const classes = useStyles();\n\n  const { user } = useSelector((state) => {\n    return {\n      user: state.profile.user,\n    };\n  });\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paperRoot}>\n        <a target=\"_blank\" href={user.html_url}>\n          <img\n            alt={user.name}\n            src={user.avatar_url}\n            className={classes.avatar}\n          />\n        </a>\n\n        <Typography variant=\"subtitle1\">\n          <strong>{user.name}</strong>\n        </Typography>\n        {user.bio && <Typography variant=\"body2\">{user.bio}</Typography>}\n        <br />\n        <Link\n          to=\"/followers\"\n          style={{\n            textDecoration: \"none\",\n            color: \"black\",\n          }}\n        >\n          <Typography className={classes.InfoItem} variant=\"body1\">\n            <strong>{user.followers}</strong> followers\n          </Typography>\n        </Link>\n        <Link\n          to=\"/following\"\n          style={{\n            textDecoration: \"none\",\n            color: \"black\",\n          }}\n        >\n          <Typography className={classes.InfoItem} variant=\"body1\">\n            <strong>{user.following}</strong> following\n          </Typography>\n        </Link>\n        <br />\n        {user.company && (\n          <Typography variant=\"subTitle2\">\n            Works at <strong>{user.company}</strong>\n          </Typography>\n        )}\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Link } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: \"left\",\n  },\n  paperRoot: {\n    width: \"100%\",\n  },\n}));\n\nexport default function MenuLeftPane() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paperRoot}>\n        <List component=\"nav\">\n          <Link\n            to=\"/dashboard\"\n            style={{\n              textDecoration: \"none\",\n              color: \"black\",\n            }}\n          >\n            <ListItem button>\n              <ListItemIcon>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n          </Link>\n        </List>\n      </Paper>\n    </div>\n  );\n}\n","export default {\n  LOAD_PROFILE: \"LOAD_PROFILE\",\n  LOAD_SNIPPETS: \"LOAD_SNIPPETS\",\n  LOAD_FOLLOWING_DEVELOPERS: \"LOAD_FOLLOWING_DEVELOPERS\",\n  LOAD_FOLLOWERS_DEVELOPERS: \"LOAD_FOLLOWERS_DEVELOPERS\",\n  DELETE_FOLLOWERS_DEVELOPERS: \"DELETE_FOLLOWERS_DEVELOPERS\",\n  DELETE_FOLLOWING_DEVELOPERS: \"DELETE_FOLLOWING_DEVELOPERS\",\n  CREATE_SNIPPET: \"CREATE_SNIPPET\",\n  SELECT_SNIPPET: \"SELECT_SNIPPET\",\n  UPDATE_SNIPPET: \"UPDATE_SNIPPET\",\n  DELETE_SNIPPET: \"DELETE_SNIPPET\",\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default function DialogMessage({\n  dialogOpen = false,\n  setDialogOpen,\n  rightButtontext,\n  rightButtonColor = \"rgb(0%, 37.2%, 76.1%)\",\n  leftButtonText,\n  onRightButtonClick,\n  onLeftButtonClick,\n  titleText,\n  bodyText,\n}) {\n  const handleClose = () => {\n    setDialogOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog open={dialogOpen} onClose={handleClose}>\n        <DialogTitle>\n          <Typography variant=\"h6\">{titleText}</Typography>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <Typography variant=\"body1\">{bodyText}</Typography>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onLeftButtonClick} color=\"default\">\n            <Typography>{leftButtonText}</Typography>\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={onRightButtonClick}\n            style={{ backgroundColor: rightButtonColor, color: \"white\" }}\n            autoFocus\n          >\n            <Typography>{rightButtontext}</Typography>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport ALERT_MESSAGE_TYPES from \"@constants/alert-message-types\";\nimport { SERVICE_STATES } from \"@utils/hooks\";\nimport ACTIONS from \"@redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  useDeleteSnippet,\n  useLoadSnippet,\n  useUpdateSnippet,\n} from \"@hooks/snippets\";\n\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Box, Divider } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport { LANGUAGES } from \"@constants/languages\";\nimport SnippetDialog from \"./snippet-dialog\";\nimport DialogMessage from \"@components/dialog-message\";\nimport AlertMessage from \"@components/alert-message\";\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\",\n  },\n}))(Tooltip);\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      display: \"inline-block\",\n      width: 250,\n      margin: 15,\n      textAlign: \"left\",\n      userSelect: \"none\",\n    },\n    snippetCard: {\n      zIndex: 1,\n    },\n    snippetContent: {\n      height: 360,\n    },\n    snippetFileContent: {\n      fontSize: 14,\n      height: 200,\n      wordWrap: \"break-word\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    },\n    language: {\n      textAlign: \"center\",\n      marginBottom: -12,\n      marginRight: -10,\n    },\n    languageChip: {\n      minWidth: 100,\n      border: \"1px solid lightgray\",\n      color: \"white\",\n    },\n    title: {\n      textOverflow: \"ellipsis\",\n      overflow: \"hidden\",\n    },\n    description: {\n      marginBottom: 12,\n      textOverflow: \"ellipsis\",\n      overflow: \"hidden\",\n    },\n    snippetContent: {},\n    snippetActionIcon: {},\n    deleteActionIcon: {},\n  };\n});\n\nexport default function SnippetCard({\n  content,\n  snippetId,\n  language,\n  title,\n  description,\n  rawUrl,\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [fileContent, setFileContent] = useState(content);\n  const [alertObj, setAlertObj] = useState(false);\n\n  const [updateDialogOpen, setUpdateDialogOpen] = useState(false);\n  const [dialogLanguage, setDialogLanguage] = React.useState(language);\n  const [dialogTitle, setDialogTitle] = React.useState(title);\n  const [dialogDescription, setDialogDescription] = React.useState(description);\n  const [dialogContent, setDialogContent] = React.useState(content);\n  const [dialogCursor, setDialogCursor] = React.useState({\n    ch: 0,\n    line: 0,\n  });\n\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n\n  const { deleteSnippetTrigger, deleteSnippetStatus } = useDeleteSnippet();\n  const { updateSnippetTrigger, updateSnippetStatus } = useUpdateSnippet();\n\n  const {\n    loadSnippetTrigger,\n    loadSnippetStatus,\n    loadSnippetData,\n  } = useLoadSnippet();\n\n  useEffect(() => {\n    if (!content) {\n      loadSnippetTrigger({\n        rawUrl,\n      });\n    } else {\n      setFileContent(content);\n    }\n  }, [content]);\n\n  useEffect(() => {\n    if (loadSnippetStatus === SERVICE_STATES.SUCCESS) {\n      setFileContent(loadSnippetData);\n      setDialogContent(loadSnippetData);\n    }\n  }, [loadSnippetStatus]);\n\n  useEffect(() => {\n    if (updateSnippetStatus === SERVICE_STATES.SUCCESS) {\n      setAlertObj({\n        message: \"Snippet updated\",\n        type: ALERT_MESSAGE_TYPES.INFO,\n      });\n      updateSnippet({\n        snippetId,\n        description: dialogDescription,\n        content: dialogContent,\n      });\n    }\n  }, [updateSnippetStatus]);\n\n  useEffect(() => {\n    if (deleteSnippetStatus === SERVICE_STATES.SUCCESS) {\n      setAlertObj({\n        message: \"Snippet deleted\",\n        type: ALERT_MESSAGE_TYPES.ERROR,\n      });\n      deleteSnippet({\n        snippetId,\n      });\n    }\n  }, [deleteSnippetStatus]);\n\n  function handleCopyLink() {\n    setAlertObj({\n      message: \"Copied to clipboard!\",\n      type: ALERT_MESSAGE_TYPES.INFO,\n    });\n  }\n\n  function handleDeleteSnippetIconClick() {\n    setDeleteDialogOpen(true);\n  }\n\n  function handleDeleteSnippet(snippetId) {\n    setDeleteDialogOpen(false);\n    deleteSnippetTrigger({\n      snippetId,\n    });\n  }\n\n  function handleUpdateSnippet({\n    snippetId,\n    language,\n    title,\n    description,\n    content,\n  }) {\n    updateSnippetTrigger({\n      snippetId,\n      language,\n      title,\n      description,\n      content,\n    });\n\n    setUpdateDialogOpen(false);\n  }\n\n  function deleteSnippet({ snippetId }) {\n    dispatch({\n      type: ACTIONS.DELETE_SNIPPET,\n      value: { snippetId },\n    });\n  }\n\n  function updateSnippet({ snippetId, description, content }) {\n    dispatch({\n      type: ACTIONS.UPDATE_SNIPPET,\n      value: { snippetId, description, content },\n    });\n  }\n\n  return (\n    <div className={classes.root}>\n      <Box className={classes.language}>\n        <Chip\n          className={classes.languageChip}\n          style={{\n            backgroundColor: LANGUAGES[language].color.primary,\n          }}\n          size=\"small\"\n          label={language ? language : \"Unknown Language\"}\n        />\n        <HtmlTooltip\n          placement=\"top\"\n          title={\n            <React.Fragment>\n              <Typography>Open in a new tab</Typography>\n            </React.Fragment>\n          }\n        >\n          <IconButton\n            target=\"_blank\"\n            href={rawUrl}\n            size=\"small\"\n            aria-label=\"Open in new tab\"\n          >\n            <OpenInNewIcon\n              style={{\n                marginRight: -133,\n                marginBottom: -5,\n                backgroundColor: \"white\",\n              }}\n              className={classes.DeleteActionIcon}\n            />\n          </IconButton>\n        </HtmlTooltip>\n      </Box>\n      <Card\n        className={classes.snippetCard}\n        style={{\n          border: `1px solid ${LANGUAGES[language].color.primary}`,\n        }}\n        variant=\"outlined\"\n      >\n        <CardContent className={classes.snippetContent}>\n          <HtmlTooltip title={<React.Fragment>{title}</React.Fragment>}>\n            <Box className={classes.title}>\n              <Typography noWrap variant=\"body1\">\n                {title}\n              </Typography>\n            </Box>\n          </HtmlTooltip>\n          <HtmlTooltip title={<React.Fragment>{description}</React.Fragment>}>\n            <Box className={classes.description}>\n              <Typography noWrap variant=\"caption\" color=\"textSecondary\">\n                {description || \"No description added\"}\n              </Typography>\n            </Box>\n          </HtmlTooltip>\n\n          <Divider />\n          <br />\n          <div className={classes.snippetFileContent}>\n            <CodeMirror\n              value={fileContent}\n              options={{\n                mode: LANGUAGES[language].mode || \"javascript\",\n              }}\n            />\n          </div>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            onClick={() => setUpdateDialogOpen(true)}\n            variant=\"outlined\"\n            size=\"small\"\n          >\n            Open\n          </Button>\n\n          <HtmlTooltip\n            placement=\"top\"\n            title={\n              <React.Fragment>\n                <Typography>Copy link to clipboard</Typography>\n              </React.Fragment>\n            }\n          >\n            <CopyToClipboard text={rawUrl} onCopy={handleCopyLink}>\n              <IconButton size=\"small\" aria-label=\"copy link\">\n                <LinkIcon className={classes.snippetActionIcon} />\n              </IconButton>\n            </CopyToClipboard>\n          </HtmlTooltip>\n\n          <div style={{ flex: 1 }}></div>\n          <HtmlTooltip\n            placement=\"top\"\n            title={\n              <React.Fragment>\n                <Typography>Delete snippet</Typography>\n              </React.Fragment>\n            }\n          >\n            <IconButton\n              size=\"small\"\n              onClick={handleDeleteSnippetIconClick}\n              aria-label=\"delete\"\n            >\n              <DeleteIcon className={classes.deleteActionIcon} />\n            </IconButton>\n          </HtmlTooltip>\n        </CardActions>\n      </Card>\n      {updateDialogOpen && (\n        <SnippetDialog\n          snippetId={snippetId}\n          open={updateDialogOpen}\n          setOpen={setUpdateDialogOpen}\n          cursor={dialogCursor}\n          setCursor={setDialogCursor}\n          language={dialogLanguage}\n          setLanguage={setDialogLanguage}\n          title={dialogTitle}\n          setTitle={setDialogTitle}\n          description={dialogDescription}\n          setDescription={setDialogDescription}\n          content={dialogContent}\n          setContent={setDialogContent}\n          handleUpdateSnippet={handleUpdateSnippet}\n        />\n      )}\n      {deleteDialogOpen && (\n        <DialogMessage\n          dialogOpen={deleteDialogOpen}\n          setDialogOpen={setDeleteDialogOpen}\n          rightButtontext=\"Delete\"\n          leftButtonText=\"Close\"\n          onRightButtonClick={() => handleDeleteSnippet(snippetId)}\n          rightButtonColor=\"red\"\n          onLeftButtonClick={() => {\n            setDeleteDialogOpen(false);\n          }}\n          titleText=\"Delete snippet\"\n          bodyText=\"Deleted snippets can never be recovered again. Are you sure you want to lose your work ?\"\n        />\n      )}\n      {alertObj && <AlertMessage {...alertObj} />}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      textAlign: \"center\",\n    },\n    wrapper: {\n      display: \"inline-block\",\n      backgroundColor: theme.palette.grey[200],\n      padding: 50,\n      borderRadius: 50,\n      // margin: 50,\n      width: \"70%\",\n    },\n  };\n});\n\nexport default function NoView({ primaryText, secondaryText, description }) {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.wrapper}>\n        <Typography variant=\"h3\">{primaryText}</Typography>\n        <Typography variant=\"h5\">{secondaryText}</Typography>\n        <br />\n        <br />\n        <Typography variant=\"h6\">{description}</Typography>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\nimport SnippetCard from \"@components/snippet-card\";\nimport NoView from \"@components/no-view\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {},\n  };\n});\n\nexport default function Snippets({ snippets }) {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      {snippets.length > 0 ? (\n        <Box className={classes.snippetsArea}>\n          {snippets.map((snippet, index) => {\n            return (\n              <Box\n                key={snippet.snippetId + \"Ad\" + index}\n                style={{ display: \"inline-block\" }}\n              >\n                <SnippetCard {...snippet} />\n              </Box>\n            );\n          })}\n        </Box>\n      ) : (\n        <NoView\n          primaryText=\"No snippets\"\n          secondaryText=\"You haven't created any snippets yet.\"\n          description=\"Choose a programming language and create snippets. They will start appearing here. All your snippets are stored in your github account\"\n        />\n      )}\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport withNavBar from \"@components/nav-wrapper\";\n\nimport { SERVICE_STATES } from \"@utils/hooks\";\nimport { useGetSnippets } from \"@hooks/snippets\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport AlertMessage from \"@components/alert-message\";\nimport CreateSnippet from \"@components/create-snippet\";\nimport { Box, Container } from \"@material-ui/core\";\nimport SnippetCardSkeleton from \"@components/skeletons/snippet-card-skeleton\";\nimport DeveloperCard from \"@components/developer-card\";\nimport MenuLeftPane from \"@components/menu-left-pane\";\nimport Snippets from \"@components/snippets\";\nimport ACTIONS from \"@redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 50,\n    textAlign: \"center\",\n  },\n  leftPaneGrid: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  snippetsArea: {},\n}));\n\nfunction Dashboard() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { snippets } = useSelector((state) => {\n    return {\n      snippets: state.snippets,\n    };\n  });\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertInfo, setAlertInfo] = useState({});\n  const {\n    getSnippetsTrigger,\n    getSnippetsStatus,\n    getSnippetsData,\n  } = useGetSnippets();\n\n  useEffect(() => {\n    getSnippetsTrigger();\n  }, []);\n\n  useEffect(() => {\n    if (getSnippetsStatus === SERVICE_STATES.SUCCESS) {\n      dispatch({\n        type: ACTIONS.LOAD_SNIPPETS,\n        value: getSnippetsData,\n      });\n    }\n  }, [getSnippetsStatus]);\n\n  function handleAlertCallback(alertInfo) {\n    setAlertInfo(alertInfo);\n    setShowAlert(true);\n  }\n\n  function handleCloseAlert() {\n    setShowAlert(false);\n  }\n\n  function handleRefreshSnippetsCallback() {\n    getSnippetsTrigger();\n  }\n\n  return (\n    <Container className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid className={classes.leftPaneGrid} item xs={12} sm={3}>\n          <DeveloperCard />\n          <br />\n          <MenuLeftPane />\n        </Grid>\n        <Grid item xs={12} sm={9}>\n          <CreateSnippet\n            refreshSnippetsCallback={handleRefreshSnippetsCallback}\n            alertCallback={handleAlertCallback}\n          />\n\n          {!snippets && (\n            <Box>\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n            </Box>\n          )}\n          <Snippets snippets={snippets} />\n\n          {showAlert && (\n            <AlertMessage handleCloseAlert={handleCloseAlert} {...alertInfo} />\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default withNavBar(Dashboard);\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport withNavBar from \"@components/nav-wrapper\";\nimport { useParams } from \"react-router-dom\";\n\nimport { SERVICE_STATES } from \"@utils/hooks\";\nimport { useGetSnippets } from \"@hooks/snippets\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport AlertMessage from \"@components/alert-message\";\nimport CreateSnippet from \"@components/create-snippet\";\nimport { Box, Container } from \"@material-ui/core\";\nimport SnippetCardSkeleton from \"@components/skeletons/snippet-card-skeleton\";\nimport DeveloperCard from \"@components/developer-card\";\nimport MenuLeftPane from \"@components/menu-left-pane\";\nimport Snippets from \"@components/snippets\";\nimport ACTIONS from \"@redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 50,\n    textAlign: \"center\",\n  },\n  leftPaneGrid: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  snippetsArea: {},\n}));\n\nfunction Profile() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { snippets } = useSelector((state) => {\n    return {\n      snippets: state.snippets,\n    };\n  });\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertInfo, setAlertInfo] = useState({});\n  const {\n    getSnippetsTrigger,\n    getSnippetsStatus,\n    getSnippetsData,\n  } = useGetSnippets();\n\n  useEffect(() => {\n    getSnippetsTrigger();\n  }, []);\n\n  useEffect(() => {\n    if (getSnippetsStatus === SERVICE_STATES.SUCCESS) {\n      dispatch({\n        type: ACTIONS.LOAD_SNIPPETS,\n        value: getSnippetsData,\n      });\n    }\n  }, [getSnippetsStatus]);\n\n  function handleAlertCallback(alertInfo) {\n    setAlertInfo(alertInfo);\n    setShowAlert(true);\n  }\n\n  function handleCloseAlert() {\n    setShowAlert(false);\n  }\n\n  function handleRefreshSnippetsCallback() {\n    getSnippetsTrigger();\n  }\n\n  return (\n    <Container className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid className={classes.leftPaneGrid} item xs={12} sm={3}>\n          <DeveloperCard />\n          <br />\n          <MenuLeftPane />\n        </Grid>\n        <Grid item xs={12} sm={9}>\n          <CreateSnippet\n            refreshSnippetsCallback={handleRefreshSnippetsCallback}\n            alertCallback={handleAlertCallback}\n          />\n\n          {!snippets && (\n            <Box>\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n              <SnippetCardSkeleton />\n            </Box>\n          )}\n          <Snippets snippets={snippets} />\n\n          {showAlert && (\n            <AlertMessage handleCloseAlert={handleCloseAlert} {...alertInfo} />\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default withNavBar(Profile);\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport Cookie from \"js-cookie\";\n\nconst verifySession = () => {\n  const accessToken = Cookie.get(\"access_token\");\n  return accessToken;\n};\n\nconst SecureRoute = ({ component: Component, ...args }) => (\n  <Route\n    {...args}\n    render={(props) =>\n      verifySession() ? <Component {...props} /> : <Redirect to=\"/auth\" />\n    }\n  />\n);\n\nexport default SecureRoute;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport Cookie from \"js-cookie\";\n\nconst verifySession = () => {\n  const accessToken = Cookie.get(\"access_token\");\n  return accessToken;\n};\n\nconst AuthRoute = ({ component: Component, ...args }) => (\n  <Route\n    {...args}\n    render={(props) =>\n      !verifySession() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/dashboard\" />\n      )\n    }\n  />\n);\n\nexport default AuthRoute;\n","export const client_id = window.location.href.includes(\"localhost\")\n  ? \"c1b558a01ef21678f544\"\n  : \"6b638b4b09e34b61d883\";\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ACTIONS from \"@redux/actions\";\nimport axios from \"axios\";\nimport { client_id } from \"@constants/auth\";\nimport { BASE_URL } from \"@constants/url\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport default function Auth() {\n  const dispatch = useDispatch();\n  const [userAccessToken, setUserAccessToken] = useState(null);\n\n  const { accessToken, user } = useSelector((state) => {\n    return {\n      accessToken: state.profile.accessToken,\n      user: state.profile.user,\n    };\n  });\n\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const code = urlParams.get(\"code\");\n\n  function successCallback({ userAccessToken, user }) {\n    dispatch({\n      type: ACTIONS.LOAD_PROFILE,\n      value: { accessToken: userAccessToken, user },\n    });\n  }\n\n  function failureCallback(error) {\n    console.log(\"Failed to authenticate-\", error);\n  }\n\n  useEffect(() => {\n    if (code) {\n      axios\n        .get(`${BASE_URL}/authenticate/${code}`)\n        .then(function (response) {\n          const accessToken = response.data.token;\n          if (accessToken) {\n            setUserAccessToken(accessToken);\n          } else {\n            failureCallback(response.data.error);\n          }\n        })\n        .catch(function (error) {\n          console.log(\"failed\", error);\n        });\n    } else {\n      window.location.href = `https://github.com/login/oauth/authorize?client_id=${client_id}&scope=gist`;\n    }\n  }, [code]);\n\n  useEffect(() => {\n    if (userAccessToken) {\n      axios\n        .get(`${BASE_URL}/user`, {\n          params: {\n            accessToken: userAccessToken,\n          },\n          headers: {\n            Accept: \"application/json\",\n          },\n        })\n        .then((response) => {\n          successCallback({\n            userAccessToken,\n            user: response.data,\n          });\n        })\n        .catch((error) => {});\n    }\n  }, [userAccessToken]);\n\n  return (\n    <div>\n      <Route>\n        {accessToken && user && <Redirect to=\"/dashboard\" />}\n      </Route>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nimport { useAsync } from \"@utils/hooks\";\nimport { BASE_URL } from \"@constants/url\";\n\nexport const useGetDevelopers = () => {\n  const { exec, inProgress, error, status, data } = useAsync(\n    async ({ developersUrl, page }) =>\n      axios.get(BASE_URL + \"/developers\", {\n        params: {\n          accessToken: Cookies.get(\"access_token\"),\n          developersUrl,\n          page,\n        },\n        headers: {\n          Accept: \"application/json\",\n        },\n      })\n  );\n\n  return {\n    getDevelopersTrigger: exec,\n    isGetDevelopersInProgress: inProgress,\n    getDevelopersStatus: status,\n    getDevelopersData: data,\n    getDevelopersError: error,\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport withNavBar from \"@components/nav-wrapper\";\nimport { SERVICE_STATES } from \"@utils/hooks\";\nimport { useGetDevelopers } from \"@hooks/users\";\n\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Container, Box, Typography } from \"@material-ui/core\";\nimport DeveloperCard from \"@components/developer-card\";\nimport MenuLeftPane from \"@components/menu-left-pane\";\nimport Grid from \"@material-ui/core/Grid\";\nimport NoView from \"@components/no-view\";\nimport ACTIONS from \"@redux/actions\";\nimport VizSensor from \"react-visibility-sensor\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid black\",\n    marginTop: -20,\n  },\n}))(Tooltip);\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      marginTop: 50,\n    },\n    leftPaneGrid: {\n      [theme.breakpoints.down(\"sm\")]: {\n        display: \"none\",\n      },\n    },\n    developersArea: {\n      marginTop: 20,\n      textAlign: \"center\",\n    },\n    developerCard: {\n      textAlign: \"center\",\n      display: \"inline-block\",\n      margin: 10,\n    },\n    developerAvatar: {\n      border: \"1px solid gray\",\n      borderRadius: \"50%\",\n      width: 100,\n      height: 100,\n    },\n  };\n});\n\nfunction DevelopersGrid({ type = \"following\" }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    getDevelopersTrigger,\n    getDevelopersStatus,\n    getDevelopersData,\n  } = useGetDevelopers();\n\n  const [page, setPage] = useState(1);\n  const [loadingComplete, setLoadingComplete] = useState(false);\n  const { developers, followingUrl } = useSelector((state) => {\n    return {\n      developers: state.developers[type],\n      followingUrl: state.profile.user.url + \"/\" + type,\n    };\n  });\n\n  useEffect(() => {\n    return function cleanUp() {\n      let actionType;\n      if (type === \"following\") {\n        actionType = ACTIONS.DELETE_FOLLOWING_DEVELOPERS;\n      } else if (type === \"followers\") {\n        actionType = ACTIONS.DELETE_FOLLOWERS_DEVELOPERS;\n      }\n\n      dispatch({\n        type: actionType,\n        value: { [type]: [] },\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    getDevelopersTrigger({ developersUrl: followingUrl, page });\n  }, [followingUrl, page]);\n\n  function loadMoreDevelopers(isVisible) {\n    if (isVisible) setPage(page + 1);\n  }\n\n  useEffect(() => {\n    if (getDevelopersStatus === SERVICE_STATES.SUCCESS) {\n      if (getDevelopersData.length && !loadingComplete) {\n        let actionType;\n        if (type === \"following\") {\n          actionType = ACTIONS.LOAD_FOLLOWING_DEVELOPERS;\n        } else if (type === \"followers\") {\n          actionType = ACTIONS.LOAD_FOLLOWERS_DEVELOPERS;\n        }\n        dispatch({\n          type: actionType,\n          value: { [type]: getDevelopersData },\n        });\n      } else {\n        setLoadingComplete(true);\n      }\n    }\n  }, [getDevelopersStatus]);\n\n  return (\n    <Container className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid className={classes.leftPaneGrid} item xs={12} sm={3}>\n          <DeveloperCard />\n          <br />\n          <MenuLeftPane />\n        </Grid>\n        <Grid className={classes.developersArea} item xs={12} sm={9}>\n          <br />\n          {developers.length > 0 && (\n            <Box className={classes.developersArea}>\n              <Typography variant=\"h5\">\n                <strong>{type}</strong>\n              </Typography>\n\n              {developers.map((developer) => {\n                return (\n                  <HtmlTooltip\n                    key={developer.id}\n                    placement=\"bottom\"\n                    title={\n                      <React.Fragment>\n                        <Typography>{developer.login}</Typography>\n                      </React.Fragment>\n                    }\n                  >\n                    <Box className={classes.developerCard}>\n                      <a target=\"_blank\" href={developer.html_url}>\n                        <img\n                          className={classes.developerAvatar}\n                          alt={developer.name}\n                          src={developer.avatar_url}\n                        />\n                      </a>\n                    </Box>\n                  </HtmlTooltip>\n                );\n              })}\n              {!loadingComplete && (\n                <div>\n                  <VizSensor\n                    onChange={(isVisible) => {\n                      loadMoreDevelopers(isVisible);\n                    }}\n                  >\n                    <div>Loading ...</div>\n                  </VizSensor>\n                </div>\n              )}\n            </Box>\n          )}\n          {loadingComplete && !developers.length && (\n            <NoView primaryText=\"No developers\" />\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default withNavBar(DevelopersGrid);\n","import React from \"react\";\nimport { HashRouter as Router, Switch } from \"react-router-dom\";\nimport Login from \"@auth/login\";\nimport Dashboard from \"@dashboard\";\nimport Profile from \"@profile\";\nimport SecureRoute from \"@auth/secure-route\";\nimport AuthRoute from \"@auth/auth-route\";\nimport Auth from \"@auth/auth\";\nimport DevelopersGrid from \"@components/developers-grid\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <AuthRoute exact path=\"/\" component={Login} />\n        <AuthRoute path=\"/auth\" component={Auth} />\n\n        <SecureRoute path=\"/dashboard\" component={Dashboard} />\n\n        <SecureRoute path=\"/profile/:profileId\" component={Dashboard} />\n\n        <SecureRoute\n          path=\"/following\"\n          component={() => <DevelopersGrid type=\"following\" />}\n        />\n\n        <SecureRoute\n          path=\"/followers\"\n          component={() => <DevelopersGrid type=\"followers\" />}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import Cookie from \"js-cookie\";\n\nconst initialState = {\n  snippets: [],\n  developers: {\n    following: [],\n    followers: [],\n  },\n  profile: {\n    accessToken: Cookie.get(\"access_token\") || null,\n    user: Cookie.get(\"user\") ? JSON.parse(Cookie.get(\"user\")) : null,\n  },\n};\n\nexport default initialState;\n","import Cookie from \"js-cookie\";\n\nimport ACTIONS from \"./actions\";\nimport INITIAL_STATE from \"./initial-state\";\nimport { LANGUAGES } from \"@constants/languages\";\nimport initialState from \"./initial-state\";\n\nfunction reducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_FOLLOWING_DEVELOPERS: {\n      const { following } = action.value;\n      return {\n        ...state,\n        developers: {\n          ...state.developers,\n          following: [...state.developers.following, ...following],\n        },\n      };\n    }\n\n    case ACTIONS.LOAD_FOLLOWERS_DEVELOPERS: {\n      const { followers } = action.value;\n      return {\n        ...state,\n        developers: {\n          ...state.developers,\n          followers: [...state.developers.followers, ...followers],\n        },\n      };\n    }\n\n    case ACTIONS.DELETE_FOLLOWING_DEVELOPERS: {\n      return {\n        ...state,\n        developers: {\n          ...state.developers,\n          following: initialState.developers.following,\n        },\n      };\n    }\n\n    case ACTIONS.DELETE_FOLLOWERS_DEVELOPERS: {\n      return {\n        ...state,\n        developers: {\n          ...state.developers,\n          followers: initialState.developers.followers,\n        },\n      };\n    }\n\n    case ACTIONS.LOAD_PROFILE: {\n      const { accessToken, user } = action.value;\n      Cookie.set(\"access_token\", accessToken);\n      Cookie.set(\"user\", user);\n      return {\n        ...state,\n        profile: action.value,\n      };\n    }\n\n    case ACTIONS.LOAD_SNIPPETS: {\n      const allSnippets = action.value;\n      let filteredSnippets = allSnippets.filter((snippet) => {\n        const fileKey = Object.keys(snippet.files)[0];\n        if (\n          fileKey.startsWith(\"msk-snippet-\") &&\n          Object.keys(LANGUAGES).includes(snippet.files[fileKey].language)\n        )\n          return snippet;\n      });\n\n      let processedSnippets = filteredSnippets.map((snippet) => {\n        const fileKey = Object.keys(snippet.files)[0];\n        const fileName = snippet.files[fileKey].filename;\n        const language = snippet.files[fileKey].language;\n        return {\n          snippetId: snippet.id,\n          language,\n          title: fileName.slice(\n            12,\n            fileName.length - LANGUAGES[language].extension.length\n          ),\n          description: snippet.description,\n          rawUrl: snippet.files[fileKey].raw_url,\n          content: null,\n        };\n      });\n      const newState = {\n        ...state,\n        snippets: processedSnippets,\n      };\n      return newState;\n    }\n\n    case ACTIONS.CREATE_SNIPPET:\n      break;\n\n    case ACTIONS.UPDATE_SNIPPET: {\n      const { description, content, snippetId } = action.value;\n      const newSnippets = state.snippets.map((snippet) => {\n        if (snippet.snippetId == snippetId) {\n          return {\n            ...snippet,\n            description,\n            content,\n          };\n        } else {\n          return snippet;\n        }\n      });\n      return {\n        ...state,\n        snippets: newSnippets,\n      };\n    }\n\n    case ACTIONS.DELETE_SNIPPET: {\n      const newSnippets = state.snippets.filter(\n        (snippet) => snippet.snippetId != action.value.snippetId\n      );\n      return {\n        ...state,\n        snippets: newSnippets,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./app\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./redux/reducer\";\n\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/htmlembedded/htmlembedded\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/cmake/cmake\";\nimport \"codemirror/mode/python/python\";\nimport \"codemirror/mode/r/r\";\nimport \"codemirror/mode/go/go\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst ReduxApp = () => {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n};\n\nReactDom.render(<ReduxApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}